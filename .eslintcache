[{"H:\\hbank\\src\\index.js":"1","H:\\hbank\\src\\pages\\assets\\assetsdetail.js":"2","H:\\hbank\\src\\api\\jsonrpc.js":"3","H:\\hbank\\src\\pages\\home\\home.js":"4","H:\\hbank\\src\\pages\\assets\\assets.js":"5","H:\\hbank\\src\\api\\abi.js":"6","H:\\hbank\\src\\pages\\financial\\financial.js":"7","H:\\hbank\\src\\pages\\my\\my.js":"8","H:\\hbank\\src\\component\\nav.js":"9","H:\\hbank\\src\\App.js":"10","H:\\hbank\\src\\i18n.js":"11","H:\\hbank\\src\\api\\common.js":"12","H:\\hbank\\src\\pages\\register\\register.js":"13","H:\\hbank\\src\\pages\\ratesetting\\ratesetting.js":"14","H:\\hbank\\src\\pages\\withdrawlist\\withdrawlist.js":"15","H:\\hbank\\src\\pages\\userlist\\userlist.js":"16","H:\\hbank\\src\\pages\\bank\\bank.js":"17"},{"size":178,"mtime":1608885154044,"results":"18","hashOfConfig":"19"},{"size":9302,"mtime":1609235144191,"results":"20","hashOfConfig":"19"},{"size":1057,"mtime":1605506526591,"results":"21","hashOfConfig":"19"},{"size":11302,"mtime":1609220083908,"results":"22","hashOfConfig":"19"},{"size":11487,"mtime":1609235166665,"results":"23","hashOfConfig":"19"},{"size":25543,"mtime":1609233571184,"results":"24","hashOfConfig":"19"},{"size":1055,"mtime":1608780626911,"results":"25","hashOfConfig":"19"},{"size":5106,"mtime":1609146067846,"results":"26","hashOfConfig":"19"},{"size":5873,"mtime":1609143759663,"results":"27","hashOfConfig":"19"},{"size":1368,"mtime":1608616207219,"results":"28","hashOfConfig":"19"},{"size":861,"mtime":1609143452585,"results":"29","hashOfConfig":"19"},{"size":1793,"mtime":1606827437794,"results":"30","hashOfConfig":"19"},{"size":23974,"mtime":1609144489289,"results":"31","hashOfConfig":"19"},{"size":14106,"mtime":1609233257541,"results":"32","hashOfConfig":"19"},{"size":11159,"mtime":1609144993503,"results":"33","hashOfConfig":"19"},{"size":8724,"mtime":1608792102303,"results":"34","hashOfConfig":"19"},{"size":16475,"mtime":1609218943393,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hpi79g",{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"H:\\hbank\\src\\index.js",[],["81","82"],"H:\\hbank\\src\\pages\\assets\\assetsdetail.js",["83","84","85","86","87","88","89","90","91","92","93"],"H:\\hbank\\src\\api\\jsonrpc.js",["94"],"import axios from 'axios'\r\n\r\n\r\nclass JsonRpc {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    seroRpc(rpc, _method, _params, callback) {\r\n        let data = {\r\n            id: 0,\r\n            jsonrpc: \"2.0\",\r\n            method: _method,\r\n            params: _params,\r\n        };\r\n        axios.post(rpc, data).then(function (response) {\r\n            let data = response.data\r\n            if (callback) {\r\n                callback(data);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"req error: \", error);\r\n        })\r\n    }\r\n\r\n    post(url, data, timeout, callback) {\r\n        axios.post(url, data, {timeout: timeout}).then(function (response) {\r\n            let data = response.data\r\n            if (callback) {\r\n                callback(data);\r\n            }\r\n        }).catch(function (error) {\r\n            callback(null, error);\r\n        })\r\n    }\r\n\r\n    get(url, cb) {\r\n        axios.get(url).then(function (rest) {\r\n            if (cb) {\r\n                cb(rest.data)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport {JsonRpc}\r\n","H:\\hbank\\src\\pages\\home\\home.js",["95"],"/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport Nav from '../../component/nav'\r\nimport i18n from '../../i18n'\r\nimport { WingBlank, WhiteSpace, List, Flex, Modal, InputItem, Toast } from 'antd-mobile';\r\nimport BigNumber from 'bignumber.js'\r\nimport abi from '../../api/abi.js'\r\nimport { bytes32ToToken, showPK, trimNumber } from \"../../api/common\";\r\nimport logo from '../../images/logo.png'\r\nimport './home.css'\r\n\r\nimport swap_icon from '../../icons/swap.png'\r\n\r\nconst operation = Modal.operation;\r\nconst alert = Modal.alert;\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            account: {},\r\n            pairs: [],\r\n            retValue: 0,\r\n            isManager: false,\r\n            balances: [],\r\n            changeType: {\r\n                value: 0, label: '本地账户'\r\n            },\r\n            choosedata: [\r\n                { value: 0, label: '本地账户' },\r\n                { value: 1, label: '银行账户' },\r\n            ]\r\n        }\r\n    }\r\n\r\n    fetchInfo(mainPKr) {\r\n        if (!mainPKr && this.state.account) {\r\n            mainPKr = this.state.account.mainPKr;\r\n        }\r\n\r\n        let self = this;\r\n        abi.pairList(mainPKr, function (pairs) {\r\n            self.setState({ pairs: pairs });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this;\r\n        let obj = JSON.parse(sessionStorage.getItem('account'));\r\n        self.setState({ account: obj });\r\n        self.getIsManager(obj.mainPKr);\r\n        self.fetchInfo(obj.mainPKr);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    getIsManager(mainPKr) {\r\n        let self = this;\r\n        abi.isManager(mainPKr, function (res) {\r\n            if (res) {\r\n                abi.balanceOf(function (balances) {\r\n                    self.setState({ balances: balances });\r\n                })\r\n            }\r\n\r\n            self.setState({\r\n                isManager: res\r\n            })\r\n        })\r\n    }\r\n\r\n    changAccount() {\r\n        let self = this;\r\n        abi.init\r\n            .then(() => {\r\n                abi.accountList(function (accounts) {\r\n                    let actions = [];\r\n                    accounts.forEach(function (account, index) {\r\n                        actions.push(\r\n                            {\r\n                                text: <span key={index}>{account.name + \":\" + showPK(account.pk)}</span>, onPress: () => {\r\n                                    self.getIsManager(account.mainPKr);\r\n                                    self.setState({\r\n                                        account: account\r\n                                    })\r\n                                    sessionStorage.setItem('account', JSON.stringify(account));\r\n                                }\r\n                            }\r\n                        );\r\n                    });\r\n                    operation(actions);\r\n                });\r\n            })\r\n    }\r\n\r\n    changeType() {\r\n        let self = this;\r\n        let actions = [];\r\n        self.state.choosedata.forEach(function (item, index) {\r\n            actions.push(\r\n                {\r\n                    text: <span key={index}>{item.label}</span>, onPress: () => {\r\n                        self.setState({ changeType: item });\r\n                    }\r\n                }\r\n            );\r\n        });\r\n        operation(actions);\r\n    }\r\n\r\n    render() {\r\n        let self = this;\r\n        let pairs = this.state.pairs.map((each, index) => {\r\n            let tokenA = bytes32ToToken(each.tokenA);\r\n            let tokenB = bytes32ToToken(each.tokenB);\r\n            if (!tokenA || !tokenB) {\r\n                return;\r\n            }\r\n            if (new BigNumber(each.price).isZero()) {\r\n                return;\r\n            }\r\n            let price = new BigNumber(each.price).div(1e9).toFixed(9);\r\n            if (each.flag) {\r\n                tokenA = bytes32ToToken(each.tokenB);\r\n                tokenB = bytes32ToToken(each.tokenA);\r\n                price = new BigNumber(1e9).div(each.price).toFixed(9);\r\n            }\r\n            price = trimNumber(price, 9);\r\n            return (\r\n                <List.Item key={index}>\r\n\r\n                    <Flex style={{ textAlign: 'center' }}>\r\n                        <Flex.Item>\r\n                            {tokenA}\r\n                        </Flex.Item>\r\n                        <Flex.Item><a onClick={() => {\r\n                            let pairs = this.state.pairs;\r\n                            pairs[index].flag = !pairs[index].flag;\r\n                            this.setState({ pairs: pairs });\r\n                        }}><img src={swap_icon} /></a></Flex.Item>\r\n                        <Flex.Item>{tokenB}</Flex.Item>\r\n                        <Flex.Item>\r\n                            {price}\r\n                        </Flex.Item>\r\n                        <Flex.Item>\r\n                            <span className=\"exchange\" onClick={() => {\r\n                                alert('', <div>\r\n                                    <div>\r\n                                        <InputItem\r\n                                            value={price} disabled={true}\r\n                                        >Price</InputItem>\r\n                                        <InputItem\r\n                                            placeholder=\"amount\" ref={el => this.sendInputRef = el}\r\n                                            onChange={(value) => {\r\n                                                this.retInputRef.value = new BigNumber(value * Number(price)).toFixed(6);\r\n                                            }}>{tokenA}</InputItem>\r\n                                        <div className=\"am-list-item am-input-item am-list-item-middle\">\r\n                                            <div className=\"am-list-line\">\r\n                                                <div className=\"am-input-label am-input-label-5\">{tokenB}</div>\r\n                                                <div className=\"am-input-control\">\r\n                                                    <input disabled placeholder=\"amount\"\r\n                                                        ref={el => this.retInputRef = el} type=\"text\" value=\"\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>, [\r\n                                    { text: `${i18n.t(\"cancel\")}`, onPress: () => console.log('cancel') },\r\n                                    {\r\n                                        text: `${i18n.t(\"confirm\")}`, onPress: () => {\r\n                                            let value = new BigNumber(this.sendInputRef.state.value).multipliedBy(1e18);\r\n                                            console.log(value, \">>>>>>>>>>>>>\")\r\n                                            if (this.state.changeType.value == 0) {\r\n                                                abi.exchange(this.state.account.pk, this.state.account.mainPKr, tokenB, value, tokenA, function (hash, err) {\r\n                                                    if (err) {\r\n                                                        Toast.fail(err);\r\n                                                    } else {\r\n                                                        abi.startGetTxReceipt(hash, function (data) {\r\n                                                            self.getIsManager(self.state.account.mainPKr);\r\n                                                            self.fetchInfo(self.state.account.mainPKr);\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            } else {\r\n                                                abi.hbankexchange(this.state.account.pk, this.state.account.mainPKr, tokenB, value.toFixed(0), tokenA, function (hash, err) {\r\n                                                    if (err) {\r\n                                                        Toast.fail(err);\r\n                                                    } else {\r\n\r\n                                                        abi.startGetTxReceipt(hash, function (data) {\r\n                                                            self.getIsManager(self.state.account.mainPKr);\r\n                                                            self.fetchInfo(self.state.account.mainPKr);\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                ])\r\n                            }}>{i18n.t(\"exchange\")}</span>\r\n                        </Flex.Item>\r\n                    </Flex>\r\n                </List.Item>\r\n            )\r\n        });\r\n        return (\r\n            <WingBlank>\r\n                <Nav selectedTab=\"2\">\r\n                    <div className=\"tabcontent\">\r\n                        <Flex className=\"header\">\r\n                            <Flex.Item className=\"tabcontent-box\">\r\n                                <img src={logo} alt=\"logo\" />\r\n                                <p className='title'>\r\n                                    {i18n.t(\"assetexchange\")}\r\n                                </p>\r\n                            </Flex.Item>\r\n                        </Flex>\r\n                        <WhiteSpace />\r\n                        <WhiteSpace />\r\n                        <Flex className=\"changAccount tabcontent-box\" style={{ textAlign: 'center' }}>\r\n                            <Flex.Item\r\n                                className=\"changAccount-name\">兑换账户:{this.state.changeType.label}</Flex.Item>\r\n                            <Flex.Item>\r\n                                <a onClick={() => {\r\n                                    this.changeType();\r\n                                }}>{i18n.t(\"Switchaccount\")}</a>\r\n                            </Flex.Item>\r\n                        </Flex>\r\n                        <WhiteSpace />\r\n                        <List className=\"tabcontent-box\">\r\n                            <Flex className=\"listheader \">\r\n                                <Flex.Item>{i18n.t(\"Originalassets\")}</Flex.Item>\r\n                                <Flex.Item>&nbsp;</Flex.Item>\r\n                                <Flex.Item>{i18n.t(\"Targetasset\")}</Flex.Item>\r\n                                <Flex.Item>{i18n.t(\"price\")}</Flex.Item>\r\n                                <Flex.Item>操作</Flex.Item>\r\n                            </Flex>\r\n                            {pairs}\r\n                        </List>\r\n                    </div>\r\n                </Nav>\r\n            </WingBlank>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","H:\\hbank\\src\\pages\\assets\\assets.js",[],"H:\\hbank\\src\\api\\abi.js",["96","97","98"],"H:\\hbank\\src\\pages\\financial\\financial.js",[],["99","100"],"H:\\hbank\\src\\pages\\my\\my.js",[],"H:\\hbank\\src\\component\\nav.js",[],"H:\\hbank\\src\\App.js",[],["101","102"],"H:\\hbank\\src\\i18n.js",[],"H:\\hbank\\src\\api\\common.js",["103"],"import BigNumber from \"bignumber.js\";\r\n\r\nexport function bytes32ToToken(data) {\r\n    try{\r\n        let index = data.indexOf(\"00\", 2);\r\n        let bytes = Buffer.from(data.substring(2, index), \"hex\");\r\n\r\n        return String.fromCharCode.apply(String, bytes).trim();\r\n    }catch (e) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport function tokenToBytes(token) {\r\n    try {\r\n        let bytes = Buffer.alloc(32);\r\n        bytes.fill(token, 0, token.length);\r\n        return \"0x\" + bytes.toString('hex');\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function showValue(val, decimals, decimalPlaces) {\r\n    if (!val) {\r\n        val = 0;\r\n    }\r\n    if (!decimals) {\r\n        decimals = 18;\r\n    }\r\n    if (!decimalPlaces) {\r\n        decimalPlaces = 3;\r\n    }\r\n    let num = new BigNumber(val).dividedBy(new BigNumber(10).pow(decimals));\r\n\r\n    return num.toFixed(decimalPlaces, 1);\r\n}\r\n\r\nexport function showPK(pk, len) {\r\n    if (!pk) {\r\n        return \"\";\r\n    }\r\n    if (!len) {\r\n        len = 8;\r\n    }\r\n    return pk.slice(0, len) + \"...\" + pk.slice(-len)\r\n}\r\n\r\nexport function trimNumber(numberStr, decimalPlaces) {\r\n    let vals = numberStr.split(\".\")\r\n    if (vals.length < 2) {\r\n        return numberStr;\r\n    } else {\r\n        let index = -1;\r\n        let decimal = vals[1];\r\n        for (let i = decimal.length - 1; i >= 0; i--) {\r\n            if (decimal.charAt(i) != '0') {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        decimal = decimal.substring(0, index + 1);\r\n        let numStr = vals[0];\r\n        if (decimal.length > decimalPlaces) {\r\n            decimal = decimal.substring(0, decimalPlaces);\r\n        }\r\n        if (decimal.length > 0) {\r\n            numStr += \".\" + decimal;\r\n        }\r\n        return numStr\r\n    }\r\n}\r\n",["104","105"],"H:\\hbank\\src\\pages\\register\\register.js",["106","107","108","109"],"/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport { Flex, List, Toast, InputItem, Button, WhiteSpace } from 'antd-mobile';\r\nimport Nav from '../../component/nav';\r\nimport logo from '../../images/logo.png';\r\nimport './register.css';\r\nimport abi from '../../api/abi';\r\nimport axios from 'axios'\r\nimport { randomBytes } from \"crypto\";\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managerPkr: \"Wqj6U2DEAuaxsRoohRmQSTtEUrZyFb4xeXUoG4ZhQdhrWHhaf9TktfHHyw3QvXgQiuk3Sko2yASHCFA3UezVH2Y945Qr8LqpjtERkmHGz4kyYgYvRTXwoSx961vGHFPwqR2\",\r\n            account: {},\r\n            hasError: false,\r\n            emailError: false,\r\n            name: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            userState: 0,\r\n            submitLoading: false,\r\n            file: '',\r\n            imgurl: '',\r\n            imgurlone: '',\r\n            idstr: \"\",\r\n            imgtype: \"\",\r\n        }\r\n        this.fileInputEl = React.createRef();\r\n        this.fileInputEls = React.createRef();\r\n    }\r\n\r\n    componentWillMount() {\r\n        let self = this;\r\n        let obj = JSON.parse(sessionStorage.getItem('account'));\r\n        self.getUser(obj.mainPKr);\r\n        console.log(obj);\r\n        self.setState({\r\n            account: obj\r\n        })\r\n    }\r\n\r\n    getUser(mainPKr) {\r\n        let self = this;\r\n        abi.getUserInfo(mainPKr, function (res) {\r\n            let codestr = \"\";\r\n            let imgtype = \"\";\r\n            if (res[0].state == '0') {\r\n                codestr = \"idcard\";\r\n                imgtype = \".png\"\r\n            } else {\r\n                codestr = res[0].code.substring(2, 42);\r\n                let j = self.hexCharCodeToStr(res[0].code).length - 1;\r\n                while (self.hexCharCodeToStr(res[0].code)[j] !== '.') {\r\n                    j--;\r\n                }\r\n                imgtype = self.hexCharCodeToStr(res[0].code).substring(j, self.hexCharCodeToStr(res[0].code).length);\r\n                console.log(imgtype);\r\n            }\r\n            self.setState({\r\n                name: res[0].name,\r\n                phone: res[0].phone,\r\n                email: res[0].email,\r\n                imgurl: 'https://13.124.240.238/images/' + codestr + '_0' + imgtype,\r\n                imgurlone: 'https://13.124.240.238/images/' + codestr + '_1' + imgtype,\r\n                userState: res[0].state\r\n            })\r\n        })\r\n    }\r\n    hexCharCodeToStr = (hexCharCodeStr) => {\r\n        var trimedStr = hexCharCodeStr.trim();\r\n        var rawStr =\r\n            trimedStr.substr(0, 2).toLowerCase() === \"0x\"\r\n                ?\r\n                trimedStr.substr(2)\r\n                :\r\n                trimedStr;\r\n        var len = rawStr.length;\r\n        if (len % 2 !== 0) {\r\n            return \"\";\r\n        }\r\n        var curCharCode;\r\n        var resultStr = [];\r\n        for (var i = 0; i < len; i = i + 2) {\r\n            curCharCode = parseInt(rawStr.substr(i, 2), 16); // ASCII Code Value\r\n            resultStr.push(String.fromCharCode(curCharCode));\r\n        }\r\n        return resultStr.join(\"\");\r\n    }\r\n    handlePhoto = async (event, type) => {\r\n        let self = this;\r\n        const files = [...event.target.files];\r\n        let i = files[0].name.length - 1;\r\n\r\n        while (files[0].name[i] !== '.') {\r\n            i--;\r\n        }\r\n        let imgtype = files[0].name.substring(i, files[0].name.length);\r\n        let codestr = \"\";\r\n        var formData = new FormData();\r\n        formData.append(\"image\", files[0]);\r\n        abi.hash(self.state.account.pk, function (res) {\r\n            console.log(res);\r\n            codestr = res.substring(0, 40);\r\n            console.log(codestr)\r\n            self.setState({\r\n                imgtype,\r\n            })\r\n            let urls = 'https://13.124.240.238/upload/?nomark=0&accessToken=000&id=' + type + '&code=' + codestr;\r\n            axios({\r\n                method: 'post',\r\n                url: urls,\r\n                data: formData\r\n            }).then((res) => {\r\n                Toast.success('上传成功', 2);\r\n                let str = 'https://13.124.240.238/images/' + codestr + '_' + type + imgtype + \"?v=\" + new Date().getTime();\r\n                if (type === 0) {\r\n                    self.setState({\r\n                        imgurl: str\r\n                    })\r\n                } else {\r\n                    self.setState({\r\n                        imgurlone: str\r\n                    })\r\n                }\r\n                self.forceUpdate();\r\n            }).catch((err) => {\r\n                Toast.fail('重新选择图片', 2);\r\n                console.log(err);\r\n            })\r\n        });\r\n    }\r\n\r\n    onErrorClick = () => {\r\n        if (this.state.hasError) {\r\n            Toast.info('Please enter 11 digits');\r\n        }\r\n    }\r\n    onEmailErrorClick = () => {\r\n        if (this.state.emailError) {\r\n            Toast.info('Please enter e-mail');\r\n        }\r\n    }\r\n    onChangesphone = (value) => {\r\n        // if (value.replace(/^(00)?82\\-?0[71](?:\\d{8,9})$/, '').length < 11) {\r\n        //     this.setState({\r\n        //         hasError: true,\r\n        //     });\r\n        // } else {\r\n        //     this.setState({\r\n        //         hasError: false,\r\n        //     });\r\n        // }\r\n        this.setState({\r\n            phone: value\r\n        });\r\n    }\r\n    onChangesname = (value) => {\r\n        this.setState({\r\n            name: value\r\n        });\r\n    }\r\n    changeState = () => {\r\n        this.setState({\r\n            userState: 0\r\n        })\r\n        this.forceUpdate();\r\n\r\n        console.log(this.state.userState)\r\n    }\r\n    onChangesemail = (value) => {\r\n        // if (value.replace(/^(00)?82\\-?0[71](?:\\d{8,9})$/, '').length < 11) {\r\n        //     this.setState({\r\n        //         emailError: true,\r\n        //     });\r\n        // } else {\r\n        //     this.setState({\r\n        //         emailError: false,\r\n        //     });\r\n        // }\r\n        this.setState({\r\n            email: value\r\n        });\r\n    }\r\n\r\n    submit = (imgtype) => {\r\n        let self = this;\r\n        if (self.state.name.length > 0 && self.state.phone.length > 0 && self.state.email.length > 0) {\r\n            abi.hash(self.state.account.pk, function (code1) {\r\n                \r\n                let buf = randomBytes(12);\r\n                buf.write(imgtype, 12 - imgtype.length);\r\n                let code =\"0x\"+code1.substring(0,40) + buf.toString('hex');\r\n                console.log(\"code1\", code);\r\n                abi.register(self.state.account.pk, self.state.account.pk, self.state.name, self.state.phone, self.state.email, code, function (hash, err) {\r\n                    if (err) {\r\n                        Toast.fail(err);\r\n                    } else {\r\n                        abi.startGetTxReceipt(hash, function (data) {\r\n                            self.getUser(self.state.account.mainPKr);\r\n                        });\r\n                    }\r\n                })\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        let self = this;\r\n        return (\r\n            <Nav selectedTab=\"4\">\r\n                <div className=\"tabcontent\">\r\n                    <Flex className=\"header\">\r\n                        <Flex.Item className=\"tabcontent-box\">\r\n                            <img src={logo} alt=\"logo\" />\r\n                            <p className='title'>\r\n                                注册信息\r\n                            </p>\r\n                        </Flex.Item>\r\n                    </Flex>\r\n                    <WhiteSpace />\r\n                    {\r\n                        self.state.userState == '0' ? <div>\r\n                            <div className=\"content\">\r\n                                <List renderHeader={() => '注册信息'}>\r\n                                    <InputItem\r\n                                        type=\"text\"\r\n                                        placeholder=\"input your name\"\r\n                                        onChange={this.onChangesname}\r\n                                        value={this.state.name}\r\n                                    >姓名:</InputItem>\r\n                                    <InputItem\r\n                                        type=\"phone\"\r\n                                        placeholder=\"input your phone\"\r\n                                        // error={this.state.hasError}\r\n                                        // onErrorClick={this.onErrorClick}\r\n                                        onChange={this.onChangesphone}\r\n                                        value={this.state.phone}\r\n                                    >手机号码:</InputItem>\r\n                                    <InputItem\r\n                                        type=\"email\"\r\n                                        placeholder=\"input your e-mail\"\r\n                                        // error={this.state.emailError}\r\n                                        // onErrorClick={this.onEmailErrorClick}\r\n                                        onChange={this.onChangesemail}\r\n                                        value={this.state.email}\r\n                                    >电子邮箱:</InputItem>\r\n                                    <WhiteSpace />\r\n\r\n                                    <Flex className=\"IDcard\" >\r\n                                        <Flex.Item className=\"center\">\r\n                                            身份证正面\r\n                                        </Flex.Item>\r\n                                        <Flex.Item className=\"center\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                ref={this.fileInputEl}\r\n                                                accept=\"image/*\"\r\n                                                // accept=\".jpg,.jpeg,.jpg\"\r\n                                                hidden\r\n                                                onChange={(event) => this.handlePhoto(event, 0)}\r\n                                            />\r\n                                            {/* <Button size=\"small\">\r\n                                                <a onClick={() => { this.fileInputEl.current.click() }}>上传照片</a>\r\n                                            </Button> */}\r\n                                        </Flex.Item>\r\n                                    </Flex>\r\n                                    <WhiteSpace />\r\n\r\n                                    <div className=\"IDcard IDimg\">\r\n                                        <img onClick={() => { this.fileInputEl.current.click() }} src={this.state.imgurl} />\r\n                                    </div>\r\n                                    <WhiteSpace />\r\n                                    <Flex className=\"IDcard\" >\r\n                                        <Flex.Item className=\"center\">\r\n                                            身份证反面\r\n                                        </Flex.Item>\r\n                                        <Flex.Item className=\"center\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                ref={this.fileInputEls}\r\n                                                accept=\"image/*\"\r\n                                                // accept=\".jpg,.jpeg,.jpg\"\r\n                                                hidden\r\n                                                onChange={(event) => this.handlePhoto(event, 1)}\r\n                                            />\r\n                                        </Flex.Item>\r\n                                    </Flex>\r\n                                    <WhiteSpace />\r\n                                    <div className=\"IDcard IDimg\">\r\n                                        <img onClick={() => { this.fileInputEls.current.click() }} src={this.state.imgurlone} />\r\n                                    </div>\r\n                                    <WhiteSpace size=\"sm\" />\r\n                                </List>\r\n                            </div>\r\n                            <WhiteSpace size=\"sm\" />\r\n                            <div className=\"content\">\r\n                                <Button size='small' type='primary' onClick={() => this.submit(self.state.imgtype)}>提交</Button>\r\n                            </div>\r\n                        </div> : <div>\r\n                                {\r\n                                    self.state.userState == '1' ? <div>\r\n                                        <div className=\"content\">\r\n                                            <List renderHeader={() => '注册信息'}>\r\n                                                <InputItem\r\n                                                    type=\"text\"\r\n                                                    disabled\r\n                                                    value={this.state.name}\r\n                                                >姓名:</InputItem>\r\n                                                <InputItem\r\n                                                    type=\"phone\"\r\n                                                    disabled\r\n                                                    value={this.state.phone}\r\n                                                >手机号码:</InputItem>\r\n                                                <InputItem\r\n                                                    type=\"email\"\r\n                                                    disabled\r\n                                                    value={this.state.email}\r\n                                                >电子邮箱:</InputItem>\r\n                                                <WhiteSpace />\r\n                                                <Flex className=\"IDcard\" >\r\n                                                    <Flex.Item className=\"center\">\r\n                                                        身份证正面\r\n                                                    </Flex.Item>\r\n                                                </Flex>\r\n                                                <WhiteSpace />\r\n\r\n                                                <div className=\"IDcard IDimg\">\r\n                                                    <img src={this.state.imgurl} />\r\n                                                </div>\r\n                                                <WhiteSpace />\r\n                                                <Flex className=\"IDcard\" >\r\n                                                    <Flex.Item className=\"center\">\r\n                                                        身份证反面\r\n                                                    </Flex.Item>\r\n                                                </Flex>\r\n                                                <WhiteSpace />\r\n                                                <div className=\"IDcard IDimg\">\r\n                                                    <img src={this.state.imgurlone} />\r\n                                                </div>\r\n                                                <WhiteSpace size=\"sm\" />\r\n                                            </List>\r\n                                        </div>\r\n                                        <WhiteSpace size=\"sm\" />\r\n                                        <div className=\"content\">\r\n                                            <Button size='small'>审核中</Button>\r\n                                        </div>\r\n                                    </div> : <div>\r\n                                            {\r\n                                                self.state.userState == '2' ? <div>\r\n                                                    <div className=\"content\">\r\n                                                        <List renderHeader={() => '注册信息'}>\r\n                                                            <InputItem\r\n                                                                type=\"text\"\r\n                                                                disabled\r\n                                                                value={this.state.name}\r\n                                                            >姓名:</InputItem>\r\n                                                            <InputItem\r\n                                                                type=\"phone\"\r\n                                                                disabled\r\n                                                                value={this.state.phone}\r\n                                                            >手机号码:</InputItem>\r\n                                                            <InputItem\r\n                                                                type=\"email\"\r\n                                                                disabled\r\n                                                                value={this.state.email}\r\n                                                            >电子邮箱:</InputItem>\r\n                                                            <WhiteSpace />\r\n\r\n                                                            <Flex className=\"IDcard\" >\r\n                                                                <Flex.Item className=\"center\">\r\n                                                                    身份证正面\r\n                                                                </Flex.Item>\r\n                                                            </Flex>\r\n                                                            <WhiteSpace />\r\n\r\n                                                            <div className=\"IDcard IDimg\">\r\n                                                                <img src={this.state.imgurl} />\r\n                                                            </div>\r\n                                                            <WhiteSpace />\r\n                                                            <Flex className=\"IDcard\" >\r\n                                                                <Flex.Item className=\"center\">\r\n                                                                    身份证反面\r\n                                                                </Flex.Item>\r\n                                                            </Flex>\r\n                                                            <WhiteSpace />\r\n                                                            <div className=\"IDcard IDimg\">\r\n                                                                <img src={this.state.imgurlone} />\r\n                                                            </div>\r\n                                                            <WhiteSpace size=\"sm\" />\r\n                                                        </List>\r\n                                                    </div>\r\n                                                    <WhiteSpace size=\"sm\" />\r\n                                                </div> : <div>\r\n                                                        <div className=\"content\">\r\n                                                            <List renderHeader={() => '注册信息'}>\r\n                                                                <InputItem\r\n                                                                    type=\"text\"\r\n                                                                    value={this.state.name}\r\n                                                                >姓名:</InputItem>\r\n                                                                <InputItem\r\n                                                                    type=\"phone\"\r\n                                                                    value={this.state.phone}\r\n                                                                >手机号码:</InputItem>\r\n                                                                <InputItem\r\n                                                                    type=\"email\"\r\n                                                                    value={this.state.email}\r\n                                                                >电子邮箱:</InputItem>\r\n                                                                <WhiteSpace />\r\n\r\n                                                                <Flex className=\"IDcard\" >\r\n                                                                    <Flex.Item className=\"center\">\r\n                                                                        身份证正面\r\n                                                                    </Flex.Item>\r\n                                                                </Flex>\r\n                                                                <WhiteSpace />\r\n\r\n                                                                <div className=\"IDcard IDimg\">\r\n                                                                    <img src={this.state.imgurl} />\r\n                                                                </div>\r\n                                                                <WhiteSpace />\r\n                                                                <Flex className=\"IDcard\" >\r\n                                                                    <Flex.Item className=\"center\">\r\n                                                                        身份证反面\r\n                                                                    </Flex.Item>\r\n                                                                </Flex>\r\n                                                                <WhiteSpace />\r\n                                                                <div className=\"IDcard IDimg\">\r\n                                                                    <img src={this.state.imgurlone} />\r\n                                                                </div>\r\n                                                                <WhiteSpace size=\"sm\" />\r\n                                                            </List>\r\n                                                        </div>\r\n                                                        <WhiteSpace size=\"sm\" />\r\n                                                        <div className=\"content\">\r\n                                                            <Flex>\r\n                                                                <Flex.Item>\r\n                                                                    <Button size='small' type='warning'>注册信息审核失败</Button>\r\n                                                                </Flex.Item>\r\n                                                                <Flex.Item>\r\n                                                                    <Button size='small' type='primary' onClick={() => this.changeState()}>编辑</Button>\r\n                                                                </Flex.Item>\r\n                                                            </Flex>\r\n                                                        </div>\r\n                                                    </div>\r\n                                            }\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                    }\r\n                    <WhiteSpace />\r\n                    <WhiteSpace />\r\n                    <WhiteSpace />\r\n                </div>\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;\r\n",["110","111"],"H:\\hbank\\src\\pages\\ratesetting\\ratesetting.js",["112","113","114"],"H:\\hbank\\src\\pages\\withdrawlist\\withdrawlist.js",[],["115","116"],"H:\\hbank\\src\\pages\\userlist\\userlist.js",[],["117","118"],"H:\\hbank\\src\\pages\\bank\\bank.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":83,"column":23,"nodeType":"125","messageId":"126","endLine":83,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":148,"column":51,"nodeType":"125","messageId":"126","endLine":148,"endColumn":53},{"ruleId":"123","severity":1,"message":"124","line":150,"column":59,"nodeType":"125","messageId":"126","endLine":150,"endColumn":61},{"ruleId":"123","severity":1,"message":"124","line":152,"column":68,"nodeType":"125","messageId":"126","endLine":152,"endColumn":70},{"ruleId":"123","severity":1,"message":"124","line":153,"column":72,"nodeType":"125","messageId":"126","endLine":153,"endColumn":74},{"ruleId":"123","severity":1,"message":"124","line":157,"column":63,"nodeType":"125","messageId":"126","endLine":157,"endColumn":65},{"ruleId":"123","severity":1,"message":"124","line":158,"column":67,"nodeType":"125","messageId":"126","endLine":158,"endColumn":69},{"ruleId":"123","severity":1,"message":"124","line":167,"column":51,"nodeType":"125","messageId":"126","endLine":167,"endColumn":53},{"ruleId":"123","severity":1,"message":"124","line":167,"column":69,"nodeType":"125","messageId":"126","endLine":167,"endColumn":71},{"ruleId":"123","severity":1,"message":"124","line":167,"column":87,"nodeType":"125","messageId":"126","endLine":167,"endColumn":89},{"ruleId":"123","severity":1,"message":"124","line":169,"column":60,"nodeType":"125","messageId":"126","endLine":169,"endColumn":62},{"ruleId":"127","severity":1,"message":"128","line":6,"column":5,"nodeType":"129","messageId":"130","endLine":7,"endColumn":6},{"ruleId":"123","severity":1,"message":"124","line":181,"column":77,"nodeType":"125","messageId":"126","endLine":181,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":956,"column":28,"nodeType":"125","messageId":"126","endLine":956,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":999,"column":35,"nodeType":"125","messageId":"126","endLine":999,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":1096,"column":35,"nodeType":"125","messageId":"126","endLine":1096,"endColumn":37},{"ruleId":"119","replacedBy":"131"},{"ruleId":"121","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},{"ruleId":"121","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"135","line":57,"column":35,"nodeType":"125","messageId":"126","endLine":57,"endColumn":37},{"ruleId":"119","replacedBy":"136"},{"ruleId":"121","replacedBy":"137"},{"ruleId":"123","severity":1,"message":"124","line":53,"column":30,"nodeType":"125","messageId":"126","endLine":53,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":227,"column":46,"nodeType":"125","messageId":"126","endLine":227,"endColumn":48},{"ruleId":"123","severity":1,"message":"124","line":306,"column":58,"nodeType":"125","messageId":"126","endLine":306,"endColumn":60},{"ruleId":"123","severity":1,"message":"124","line":354,"column":70,"nodeType":"125","messageId":"126","endLine":354,"endColumn":72},{"ruleId":"119","replacedBy":"138"},{"ruleId":"121","replacedBy":"139"},{"ruleId":"123","severity":1,"message":"135","line":60,"column":26,"nodeType":"125","messageId":"126","endLine":60,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":63,"column":47,"nodeType":"125","messageId":"126","endLine":63,"endColumn":49},{"ruleId":"140","severity":1,"message":"141","line":127,"column":15,"nodeType":"142","messageId":"143","endLine":127,"endColumn":19},{"ruleId":"119","replacedBy":"144"},{"ruleId":"121","replacedBy":"145"},{"ruleId":"119","replacedBy":"146"},{"ruleId":"121","replacedBy":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["148"],["149"],["148"],["149"],"Expected '!==' and instead saw '!='.",["148"],["149"],["148"],["149"],"no-unused-vars","'Item' is assigned a value but never used.","Identifier","unusedVar",["148"],["149"],["148"],["149"],"no-global-assign","no-unsafe-negation"]